// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 16.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace UITests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Go through all major views.
        /// </summary>
        public void USurviveFlythrough()
        {
            #region Variable Declarations
            WpfButton uIUserFilesButton = this.UIUSurviveWindow.UINavigationFramePane.UIUserFilesButton;
            WpfComboBox uIUserDropdownComboBox = this.UIUserSelectionWindow.UIUserDropdownComboBox;
            WpfEdit uIEnterFieldEdit = this.UICreateUserWindow.UIEnterFieldEdit;
            WpfButton uIOKButton = this.UICreateUserWindow.UIOKButton;
            WpfButton uISelectButton = this.UIUserSelectionWindow.UISelectButton;
            WpfButton uIClassesBtnButton = this.UIUSurviveWindow.UIClassesBtnButton;
            WpfButton uIAddClassButton = this.UIUSurviveWindow.UINavigationFramePane.UIAddClassButton;
            WpfEdit uITbNameEdit = this.UIEditClassWindow.UITbNameEdit;
            WpfEdit uITbInstructorEdit = this.UIEditClassWindow.UITbInstructorEdit;
            WpfEdit uITbInstEmailEdit = this.UIEditClassWindow.UITbInstEmailEdit;
            WpfEdit uITbWebsiteEdit = this.UIEditClassWindow.UITbWebsiteEdit;
            WpfButton uIEditMeetingTimesButton = this.UIEditClassWindow.UIEditMeetingTimesButton;
            WpfCheckBox uISunCheckBox = this.UIEditMeetingTimeWindow.UISunCheckBox;
            WpfCheckBox uIWedCheckBox = this.UIEditMeetingTimeWindow.UIWedCheckBox;
            WpfCheckBox uITHCheckBox = this.UIEditMeetingTimeWindow.UITHCheckBox;
            WpfButton uIAddMeetingButton = this.UIEditMeetingTimeWindow.UIAddMeetingButton;
            WpfButton uISaveButton = this.UIEditMeetingTimeWindow.UISaveButton;
            WpfEdit uITbNotesEdit = this.UIEditClassWindow.UITbNotesEdit;
            WpfButton uISaveButton1 = this.UIEditClassWindow.UISaveButton;
            WpfButton uIAssignmentsBtnButton = this.UIUSurviveWindow.UIAssignmentsBtnButton;
            WpfButton uIAddAssignmentButton = this.UIUSurviveWindow.UINavigationFramePane.UIAddAssignmentButton;
            WpfComboBox uICmbClassesComboBox = this.UIEditAssignmentWindow.UICmbClassesComboBox;
            WpfEdit uITbAssignmentNameEdit = this.UIEditAssignmentWindow.UITbAssignmentNameEdit;
            WpfEdit uIPART_TextBoxEdit = this.UIEditAssignmentWindow.UIPART_TextBoxEdit;
            WpfButton uIPART_IncreaseButtonButton = this.UIEditAssignmentWindow.UIPART_IncreaseButtonButton;
            WpfButton uIPART_IncreaseButtonButton1 = this.UIEditAssignmentWindow.UIPART_IncreaseButtonButton1;
            WpfComboBox uICmbTypeComboBox = this.UIEditAssignmentWindow.UICmbTypeComboBox;
            WpfButton uISaveButton2 = this.UIEditAssignmentWindow.UISaveButton;
            WpfButton uICloseButton = this.UIUSurviveNotificationWindow.UICloseButton;
            WpfButton uIGradebookBtnButton = this.UIUSurviveWindow.UIGradebookBtnButton;
            WpfText uIPointsEarnedText = this.UIUSurviveWindow.UINavigationFramePane.UIDG1Table.UIPART_ColumnHeadersPrHeader.UIPointsEarnedColumnHeader.UIPointsEarnedText;
            WpfEdit uIOldgpaEdit = this.UIUSurviveWindow.UINavigationFramePane.UIOldgpaEdit;
            WpfButton uIDisplayGPAButton = this.UIUSurviveWindow.UINavigationFramePane.UIDisplayGPAButton;
            WinButton uICloseButton1 = this.UIGPACalculatorWindow.UICloseButton;
            WinButton uICloseButton2 = this.UIUSurviveWindow1.UICloseButton;
            #endregion

            // Click 'User Files' button
            Mouse.Click(uIUserFilesButton, new Point(61, 11));

            // Select '<Create new user...>' in 'userDropdown' combo box
            uIUserDropdownComboBox.SelectedItem = this.USurviveFlythroughParams.UIUserDropdownComboBoxSelectedItem;

            // Type 'New' in 'enterField' text box
            uIEnterFieldEdit.Text = this.USurviveFlythroughParams.UIEnterFieldEditText;

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(60, 4));

            // Click 'Select' button
            Mouse.Click(uISelectButton, new Point(27, 9));

            // Click 'ClassesBtn' button
            Mouse.Click(uIClassesBtnButton, new Point(109, 53));

            // Click 'Add Class' button
            Mouse.Click(uIAddClassButton, new Point(75, 6));

            // Type 'Class' in 'tbName' text box
            uITbNameEdit.Text = this.USurviveFlythroughParams.UITbNameEditText;

            // Type 'Inst' in 'tbInstructor' text box
            uITbInstructorEdit.Text = this.USurviveFlythroughParams.UITbInstructorEditText;

            // Type 'eemail@gmail.com' in 'tbInstEmail' text box
            uITbInstEmailEdit.Text = this.USurviveFlythroughParams.UITbInstEmailEditText;

            // Type 'www.google.com' in 'tbWebsite' text box
            uITbWebsiteEdit.Text = this.USurviveFlythroughParams.UITbWebsiteEditText;

            // Click 'Edit Meeting Times' button
            Mouse.Click(uIEditMeetingTimesButton, new Point(101, 13));

            // Select 'Sun' check box
            uISunCheckBox.Checked = this.USurviveFlythroughParams.UISunCheckBoxChecked;

            // Select 'Wed' check box
            uIWedCheckBox.Checked = this.USurviveFlythroughParams.UIWedCheckBoxChecked;

            // Select 'Th' check box
            uITHCheckBox.Checked = this.USurviveFlythroughParams.UITHCheckBoxChecked;

            // Click 'Add Meeting' button
            Mouse.Click(uIAddMeetingButton, new Point(117, 8));

            // Click 'Save' button
            Mouse.Click(uISaveButton, new Point(92, 6));

            // Type 'notes' in 'tbNotes' text box
            uITbNotesEdit.Text = this.USurviveFlythroughParams.UITbNotesEditText;

            // Click 'Save' button
            Mouse.Click(uISaveButton1, new Point(112, 10));

            // Click 'AssignmentsBtn' button
            Mouse.Click(uIAssignmentsBtnButton, new Point(112, 62));

            // Click 'Add Assignment' button
            Mouse.Click(uIAddAssignmentButton, new Point(42, 8));

            // Select 'Class' in 'cmbClasses' combo box
            uICmbClassesComboBox.SelectedItem = this.USurviveFlythroughParams.UICmbClassesComboBoxSelectedItem;

            // Type 'assign' in 'tbAssignmentName' text box
            uITbAssignmentNameEdit.Text = this.USurviveFlythroughParams.UITbAssignmentNameEditText;

            // Click 'PART_TextBox' text box
            Mouse.Click(uIPART_TextBoxEdit, new Point(154, 11));

            // Double-Click 'PART_IncreaseButton' button
            Mouse.DoubleClick(uIPART_IncreaseButtonButton, new Point(15, 3));

            // Click 'PART_IncreaseButton' button
            Mouse.Click(uIPART_IncreaseButtonButton1, new Point(12, 6));

            // Select 'Assignment' in 'cmbType' combo box
            uICmbTypeComboBox.SelectedItem = this.USurviveFlythroughParams.UICmbTypeComboBoxSelectedItem;

            // Click 'Save' button
            Mouse.Click(uISaveButton2, new Point(123, 9));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(70, 16));

            // Click 'GradebookBtn' button
            Mouse.Click(uIGradebookBtnButton, new Point(58, 74));

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Click 'Points Earned' label
            Mouse.Click(uIPointsEarnedText, new Point(56, 9));

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Type '' in 'oldgpa' text box
            uIOldgpaEdit.Text = this.USurviveFlythroughParams.UIOldgpaEditText;

            // Click 'Display GPA' button
            Mouse.Click(uIDisplayGPAButton, new Point(116, 4));

            // Click 'Close' button
            Mouse.Click(uICloseButton1, new Point(21, 14));

            // Click 'Close' button
            Mouse.Click(uICloseButton2, new Point(19, 19));
        }
        
        #region Properties
        public virtual USurviveFlythroughParams USurviveFlythroughParams
        {
            get
            {
                if ((this.mUSurviveFlythroughParams == null))
                {
                    this.mUSurviveFlythroughParams = new USurviveFlythroughParams();
                }
                return this.mUSurviveFlythroughParams;
            }
        }
        
        public UIUSurviveWindow UIUSurviveWindow
        {
            get
            {
                if ((this.mUIUSurviveWindow == null))
                {
                    this.mUIUSurviveWindow = new UIUSurviveWindow();
                }
                return this.mUIUSurviveWindow;
            }
        }
        
        public UIUserSelectionWindow UIUserSelectionWindow
        {
            get
            {
                if ((this.mUIUserSelectionWindow == null))
                {
                    this.mUIUserSelectionWindow = new UIUserSelectionWindow();
                }
                return this.mUIUserSelectionWindow;
            }
        }
        
        public UICreateUserWindow UICreateUserWindow
        {
            get
            {
                if ((this.mUICreateUserWindow == null))
                {
                    this.mUICreateUserWindow = new UICreateUserWindow();
                }
                return this.mUICreateUserWindow;
            }
        }
        
        public UIEditClassWindow UIEditClassWindow
        {
            get
            {
                if ((this.mUIEditClassWindow == null))
                {
                    this.mUIEditClassWindow = new UIEditClassWindow();
                }
                return this.mUIEditClassWindow;
            }
        }
        
        public UIEditMeetingTimeWindow UIEditMeetingTimeWindow
        {
            get
            {
                if ((this.mUIEditMeetingTimeWindow == null))
                {
                    this.mUIEditMeetingTimeWindow = new UIEditMeetingTimeWindow();
                }
                return this.mUIEditMeetingTimeWindow;
            }
        }
        
        public UIEditAssignmentWindow UIEditAssignmentWindow
        {
            get
            {
                if ((this.mUIEditAssignmentWindow == null))
                {
                    this.mUIEditAssignmentWindow = new UIEditAssignmentWindow();
                }
                return this.mUIEditAssignmentWindow;
            }
        }
        
        public UIUSurviveNotificationWindow UIUSurviveNotificationWindow
        {
            get
            {
                if ((this.mUIUSurviveNotificationWindow == null))
                {
                    this.mUIUSurviveNotificationWindow = new UIUSurviveNotificationWindow();
                }
                return this.mUIUSurviveNotificationWindow;
            }
        }
        
        public UIGPACalculatorWindow UIGPACalculatorWindow
        {
            get
            {
                if ((this.mUIGPACalculatorWindow == null))
                {
                    this.mUIGPACalculatorWindow = new UIGPACalculatorWindow();
                }
                return this.mUIGPACalculatorWindow;
            }
        }
        
        public UIUSurviveWindow1 UIUSurviveWindow1
        {
            get
            {
                if ((this.mUIUSurviveWindow1 == null))
                {
                    this.mUIUSurviveWindow1 = new UIUSurviveWindow1();
                }
                return this.mUIUSurviveWindow1;
            }
        }
        #endregion
        
        #region Fields
        private USurviveFlythroughParams mUSurviveFlythroughParams;
        
        private UIUSurviveWindow mUIUSurviveWindow;
        
        private UIUserSelectionWindow mUIUserSelectionWindow;
        
        private UICreateUserWindow mUICreateUserWindow;
        
        private UIEditClassWindow mUIEditClassWindow;
        
        private UIEditMeetingTimeWindow mUIEditMeetingTimeWindow;
        
        private UIEditAssignmentWindow mUIEditAssignmentWindow;
        
        private UIUSurviveNotificationWindow mUIUSurviveNotificationWindow;
        
        private UIGPACalculatorWindow mUIGPACalculatorWindow;
        
        private UIUSurviveWindow1 mUIUSurviveWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'USurviveFlythrough'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class USurviveFlythroughParams
    {
        
        #region Fields
        /// <summary>
        /// Select '<Create new user...>' in 'userDropdown' combo box
        /// </summary>
        public string UIUserDropdownComboBoxSelectedItem = "<Create new user...>";
        
        /// <summary>
        /// Type 'New' in 'enterField' text box
        /// </summary>
        public string UIEnterFieldEditText = "New";
        
        /// <summary>
        /// Type 'Class' in 'tbName' text box
        /// </summary>
        public string UITbNameEditText = "Class";
        
        /// <summary>
        /// Type 'Inst' in 'tbInstructor' text box
        /// </summary>
        public string UITbInstructorEditText = "Inst";
        
        /// <summary>
        /// Type 'eemail@gmail.com' in 'tbInstEmail' text box
        /// </summary>
        public string UITbInstEmailEditText = "eemail@gmail.com";
        
        /// <summary>
        /// Type 'www.google.com' in 'tbWebsite' text box
        /// </summary>
        public string UITbWebsiteEditText = "www.google.com";
        
        /// <summary>
        /// Select 'Sun' check box
        /// </summary>
        public bool UISunCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Wed' check box
        /// </summary>
        public bool UIWedCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Th' check box
        /// </summary>
        public bool UITHCheckBoxChecked = true;
        
        /// <summary>
        /// Type 'notes' in 'tbNotes' text box
        /// </summary>
        public string UITbNotesEditText = "notes";
        
        /// <summary>
        /// Select 'Class' in 'cmbClasses' combo box
        /// </summary>
        public string UICmbClassesComboBoxSelectedItem = "Class";
        
        /// <summary>
        /// Type 'assign' in 'tbAssignmentName' text box
        /// </summary>
        public string UITbAssignmentNameEditText = "assign";
        
        /// <summary>
        /// Select 'Assignment' in 'cmbType' combo box
        /// </summary>
        public string UICmbTypeComboBoxSelectedItem = "Assignment";
        
        /// <summary>
        /// Type '' in 'oldgpa' text box
        /// </summary>
        public string UIOldgpaEditText = "";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIUSurviveWindow : WpfWindow
    {
        
        public UIUSurviveWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "USurvive";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("USurvive");
            #endregion
        }
        
        #region Properties
        public UINavigationFramePane UINavigationFramePane
        {
            get
            {
                if ((this.mUINavigationFramePane == null))
                {
                    this.mUINavigationFramePane = new UINavigationFramePane(this);
                }
                return this.mUINavigationFramePane;
            }
        }
        
        public WpfButton UIClassesBtnButton
        {
            get
            {
                if ((this.mUIClassesBtnButton == null))
                {
                    this.mUIClassesBtnButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIClassesBtnButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ClassesBtn";
                    this.mUIClassesBtnButton.WindowTitles.Add("USurvive");
                    #endregion
                }
                return this.mUIClassesBtnButton;
            }
        }
        
        public WpfButton UIAssignmentsBtnButton
        {
            get
            {
                if ((this.mUIAssignmentsBtnButton == null))
                {
                    this.mUIAssignmentsBtnButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIAssignmentsBtnButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "AssignmentsBtn";
                    this.mUIAssignmentsBtnButton.WindowTitles.Add("USurvive");
                    #endregion
                }
                return this.mUIAssignmentsBtnButton;
            }
        }
        
        public WpfButton UIGradebookBtnButton
        {
            get
            {
                if ((this.mUIGradebookBtnButton == null))
                {
                    this.mUIGradebookBtnButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIGradebookBtnButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "GradebookBtn";
                    this.mUIGradebookBtnButton.WindowTitles.Add("USurvive");
                    #endregion
                }
                return this.mUIGradebookBtnButton;
            }
        }
        #endregion
        
        #region Fields
        private UINavigationFramePane mUINavigationFramePane;
        
        private WpfButton mUIClassesBtnButton;
        
        private WpfButton mUIAssignmentsBtnButton;
        
        private WpfButton mUIGradebookBtnButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UINavigationFramePane : WpfPane
    {
        
        public UINavigationFramePane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.Frame";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "NavigationFrame";
            this.WindowTitles.Add("USurvive");
            #endregion
        }
        
        #region Properties
        public WpfButton UIUserFilesButton
        {
            get
            {
                if ((this.mUIUserFilesButton == null))
                {
                    this.mUIUserFilesButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIUserFilesButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "ChooseUser";
                    this.mUIUserFilesButton.WindowTitles.Add("USurvive");
                    #endregion
                }
                return this.mUIUserFilesButton;
            }
        }
        
        public WpfButton UIAddClassButton
        {
            get
            {
                if ((this.mUIAddClassButton == null))
                {
                    this.mUIAddClassButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIAddClassButton.SearchProperties[WpfButton.PropertyNames.Name] = "Add Class";
                    this.mUIAddClassButton.WindowTitles.Add("USurvive");
                    #endregion
                }
                return this.mUIAddClassButton;
            }
        }
        
        public WpfButton UIAddAssignmentButton
        {
            get
            {
                if ((this.mUIAddAssignmentButton == null))
                {
                    this.mUIAddAssignmentButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIAddAssignmentButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnNewAssignment";
                    this.mUIAddAssignmentButton.WindowTitles.Add("USurvive");
                    #endregion
                }
                return this.mUIAddAssignmentButton;
            }
        }
        
        public UIDG1Table UIDG1Table
        {
            get
            {
                if ((this.mUIDG1Table == null))
                {
                    this.mUIDG1Table = new UIDG1Table(this);
                }
                return this.mUIDG1Table;
            }
        }
        
        public WpfEdit UIOldgpaEdit
        {
            get
            {
                if ((this.mUIOldgpaEdit == null))
                {
                    this.mUIOldgpaEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIOldgpaEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "oldgpa";
                    this.mUIOldgpaEdit.WindowTitles.Add("USurvive");
                    #endregion
                }
                return this.mUIOldgpaEdit;
            }
        }
        
        public WpfButton UIDisplayGPAButton
        {
            get
            {
                if ((this.mUIDisplayGPAButton == null))
                {
                    this.mUIDisplayGPAButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIDisplayGPAButton.SearchProperties[WpfButton.PropertyNames.Name] = "Display GPA";
                    this.mUIDisplayGPAButton.WindowTitles.Add("USurvive");
                    #endregion
                }
                return this.mUIDisplayGPAButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIUserFilesButton;
        
        private WpfButton mUIAddClassButton;
        
        private WpfButton mUIAddAssignmentButton;
        
        private UIDG1Table mUIDG1Table;
        
        private WpfEdit mUIOldgpaEdit;
        
        private WpfButton mUIDisplayGPAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIDG1Table : WpfTable
    {
        
        public UIDG1Table(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "DG1";
            this.WindowTitles.Add("USurvive");
            #endregion
        }
        
        #region Properties
        public UIPART_ColumnHeadersPrHeader UIPART_ColumnHeadersPrHeader
        {
            get
            {
                if ((this.mUIPART_ColumnHeadersPrHeader == null))
                {
                    this.mUIPART_ColumnHeadersPrHeader = new UIPART_ColumnHeadersPrHeader(this);
                }
                return this.mUIPART_ColumnHeadersPrHeader;
            }
        }
        #endregion
        
        #region Fields
        private UIPART_ColumnHeadersPrHeader mUIPART_ColumnHeadersPrHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIPART_ColumnHeadersPrHeader : WpfControl
    {
        
        public UIPART_ColumnHeadersPrHeader(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "Header";
            this.SearchProperties[WpfControl.PropertyNames.AutomationId] = "PART_ColumnHeadersPresenter";
            this.WindowTitles.Add("USurvive");
            #endregion
        }
        
        #region Properties
        public UIPointsEarnedColumnHeader UIPointsEarnedColumnHeader
        {
            get
            {
                if ((this.mUIPointsEarnedColumnHeader == null))
                {
                    this.mUIPointsEarnedColumnHeader = new UIPointsEarnedColumnHeader(this);
                }
                return this.mUIPointsEarnedColumnHeader;
            }
        }
        #endregion
        
        #region Fields
        private UIPointsEarnedColumnHeader mUIPointsEarnedColumnHeader;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIPointsEarnedColumnHeader : WpfControl
    {
        
        public UIPointsEarnedColumnHeader(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ControlType] = "ColumnHeader";
            this.SearchProperties[WpfControl.PropertyNames.Name] = "Points Earned";
            this.WindowTitles.Add("USurvive");
            #endregion
        }
        
        #region Properties
        public WpfText UIPointsEarnedText
        {
            get
            {
                if ((this.mUIPointsEarnedText == null))
                {
                    this.mUIPointsEarnedText = new WpfText(this);
                    #region Search Criteria
                    this.mUIPointsEarnedText.SearchProperties[WpfText.PropertyNames.Name] = "Points Earned";
                    this.mUIPointsEarnedText.WindowTitles.Add("USurvive");
                    #endregion
                }
                return this.mUIPointsEarnedText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIPointsEarnedText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIUserSelectionWindow : WpfWindow
    {
        
        public UIUserSelectionWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "UserSelection";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("UserSelection");
            #endregion
        }
        
        #region Properties
        public WpfComboBox UIUserDropdownComboBox
        {
            get
            {
                if ((this.mUIUserDropdownComboBox == null))
                {
                    this.mUIUserDropdownComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIUserDropdownComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "userDropdown";
                    this.mUIUserDropdownComboBox.WindowTitles.Add("UserSelection");
                    #endregion
                }
                return this.mUIUserDropdownComboBox;
            }
        }
        
        public WpfButton UISelectButton
        {
            get
            {
                if ((this.mUISelectButton == null))
                {
                    this.mUISelectButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISelectButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "OK";
                    this.mUISelectButton.WindowTitles.Add("UserSelection");
                    #endregion
                }
                return this.mUISelectButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mUIUserDropdownComboBox;
        
        private WpfButton mUISelectButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UICreateUserWindow : WpfWindow
    {
        
        public UICreateUserWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "CreateUser";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("CreateUser");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIEnterFieldEdit
        {
            get
            {
                if ((this.mUIEnterFieldEdit == null))
                {
                    this.mUIEnterFieldEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIEnterFieldEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "enterField";
                    this.mUIEnterFieldEdit.WindowTitles.Add("CreateUser");
                    #endregion
                }
                return this.mUIEnterFieldEdit;
            }
        }
        
        public WpfButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "OK";
                    this.mUIOKButton.WindowTitles.Add("CreateUser");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIEnterFieldEdit;
        
        private WpfButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIEditClassWindow : WpfWindow
    {
        
        public UIEditClassWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "EditClass";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("EditClass");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITbNameEdit
        {
            get
            {
                if ((this.mUITbNameEdit == null))
                {
                    this.mUITbNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITbNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "tbName";
                    this.mUITbNameEdit.WindowTitles.Add("EditClass");
                    #endregion
                }
                return this.mUITbNameEdit;
            }
        }
        
        public WpfEdit UITbInstructorEdit
        {
            get
            {
                if ((this.mUITbInstructorEdit == null))
                {
                    this.mUITbInstructorEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITbInstructorEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "tbInstructor";
                    this.mUITbInstructorEdit.WindowTitles.Add("EditClass");
                    #endregion
                }
                return this.mUITbInstructorEdit;
            }
        }
        
        public WpfEdit UITbInstEmailEdit
        {
            get
            {
                if ((this.mUITbInstEmailEdit == null))
                {
                    this.mUITbInstEmailEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITbInstEmailEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "tbInstEmail";
                    this.mUITbInstEmailEdit.WindowTitles.Add("EditClass");
                    #endregion
                }
                return this.mUITbInstEmailEdit;
            }
        }
        
        public WpfEdit UITbWebsiteEdit
        {
            get
            {
                if ((this.mUITbWebsiteEdit == null))
                {
                    this.mUITbWebsiteEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITbWebsiteEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "tbWebsite";
                    this.mUITbWebsiteEdit.WindowTitles.Add("EditClass");
                    #endregion
                }
                return this.mUITbWebsiteEdit;
            }
        }
        
        public WpfButton UIEditMeetingTimesButton
        {
            get
            {
                if ((this.mUIEditMeetingTimesButton == null))
                {
                    this.mUIEditMeetingTimesButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIEditMeetingTimesButton.SearchProperties[WpfButton.PropertyNames.Name] = "Edit Meeting Times";
                    this.mUIEditMeetingTimesButton.WindowTitles.Add("EditClass");
                    #endregion
                }
                return this.mUIEditMeetingTimesButton;
            }
        }
        
        public WpfEdit UITbNotesEdit
        {
            get
            {
                if ((this.mUITbNotesEdit == null))
                {
                    this.mUITbNotesEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITbNotesEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "tbNotes";
                    this.mUITbNotesEdit.WindowTitles.Add("EditClass");
                    #endregion
                }
                return this.mUITbNotesEdit;
            }
        }
        
        public WpfButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WpfButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("EditClass");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITbNameEdit;
        
        private WpfEdit mUITbInstructorEdit;
        
        private WpfEdit mUITbInstEmailEdit;
        
        private WpfEdit mUITbWebsiteEdit;
        
        private WpfButton mUIEditMeetingTimesButton;
        
        private WpfEdit mUITbNotesEdit;
        
        private WpfButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIEditMeetingTimeWindow : WpfWindow
    {
        
        public UIEditMeetingTimeWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Edit Meeting Time";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Edit Meeting Time");
            #endregion
        }
        
        #region Properties
        public WpfCheckBox UISunCheckBox
        {
            get
            {
                if ((this.mUISunCheckBox == null))
                {
                    this.mUISunCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUISunCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Sun";
                    this.mUISunCheckBox.WindowTitles.Add("Edit Meeting Time");
                    #endregion
                }
                return this.mUISunCheckBox;
            }
        }
        
        public WpfCheckBox UIWedCheckBox
        {
            get
            {
                if ((this.mUIWedCheckBox == null))
                {
                    this.mUIWedCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIWedCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Wed";
                    this.mUIWedCheckBox.WindowTitles.Add("Edit Meeting Time");
                    #endregion
                }
                return this.mUIWedCheckBox;
            }
        }
        
        public WpfCheckBox UITHCheckBox
        {
            get
            {
                if ((this.mUITHCheckBox == null))
                {
                    this.mUITHCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUITHCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "Th";
                    this.mUITHCheckBox.WindowTitles.Add("Edit Meeting Time");
                    #endregion
                }
                return this.mUITHCheckBox;
            }
        }
        
        public WpfButton UIAddMeetingButton
        {
            get
            {
                if ((this.mUIAddMeetingButton == null))
                {
                    this.mUIAddMeetingButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIAddMeetingButton.SearchProperties[WpfButton.PropertyNames.Name] = "Add Meeting";
                    this.mUIAddMeetingButton.WindowTitles.Add("Edit Meeting Time");
                    #endregion
                }
                return this.mUIAddMeetingButton;
            }
        }
        
        public WpfButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WpfButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Edit Meeting Time");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfCheckBox mUISunCheckBox;
        
        private WpfCheckBox mUIWedCheckBox;
        
        private WpfCheckBox mUITHCheckBox;
        
        private WpfButton mUIAddMeetingButton;
        
        private WpfButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIEditAssignmentWindow : WpfWindow
    {
        
        public UIEditAssignmentWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Edit Assignment";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Edit Assignment");
            #endregion
        }
        
        #region Properties
        public WpfComboBox UICmbClassesComboBox
        {
            get
            {
                if ((this.mUICmbClassesComboBox == null))
                {
                    this.mUICmbClassesComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUICmbClassesComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "cmbClasses";
                    this.mUICmbClassesComboBox.WindowTitles.Add("Edit Assignment");
                    #endregion
                }
                return this.mUICmbClassesComboBox;
            }
        }
        
        public WpfEdit UITbAssignmentNameEdit
        {
            get
            {
                if ((this.mUITbAssignmentNameEdit == null))
                {
                    this.mUITbAssignmentNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITbAssignmentNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "tbAssignmentName";
                    this.mUITbAssignmentNameEdit.WindowTitles.Add("Edit Assignment");
                    #endregion
                }
                return this.mUITbAssignmentNameEdit;
            }
        }
        
        public WpfEdit UIPART_TextBoxEdit
        {
            get
            {
                if ((this.mUIPART_TextBoxEdit == null))
                {
                    this.mUIPART_TextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPART_TextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mUIPART_TextBoxEdit.WindowTitles.Add("Edit Assignment");
                    #endregion
                }
                return this.mUIPART_TextBoxEdit;
            }
        }
        
        public WpfButton UIPART_IncreaseButtonButton
        {
            get
            {
                if ((this.mUIPART_IncreaseButtonButton == null))
                {
                    this.mUIPART_IncreaseButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIPART_IncreaseButtonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_IncreaseButton";
                    this.mUIPART_IncreaseButtonButton.WindowTitles.Add("Edit Assignment");
                    #endregion
                }
                return this.mUIPART_IncreaseButtonButton;
            }
        }
        
        public WpfButton UIPART_IncreaseButtonButton1
        {
            get
            {
                if ((this.mUIPART_IncreaseButtonButton1 == null))
                {
                    this.mUIPART_IncreaseButtonButton1 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIPART_IncreaseButtonButton1.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_IncreaseButton";
                    this.mUIPART_IncreaseButtonButton1.SearchProperties[WpfButton.PropertyNames.Instance] = "3";
                    this.mUIPART_IncreaseButtonButton1.WindowTitles.Add("Edit Assignment");
                    #endregion
                }
                return this.mUIPART_IncreaseButtonButton1;
            }
        }
        
        public WpfComboBox UICmbTypeComboBox
        {
            get
            {
                if ((this.mUICmbTypeComboBox == null))
                {
                    this.mUICmbTypeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUICmbTypeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "cmbType";
                    this.mUICmbTypeComboBox.WindowTitles.Add("Edit Assignment");
                    #endregion
                }
                return this.mUICmbTypeComboBox;
            }
        }
        
        public WpfButton UISaveButton
        {
            get
            {
                if ((this.mUISaveButton == null))
                {
                    this.mUISaveButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISaveButton.SearchProperties[WpfButton.PropertyNames.Name] = "Save";
                    this.mUISaveButton.WindowTitles.Add("Edit Assignment");
                    #endregion
                }
                return this.mUISaveButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfComboBox mUICmbClassesComboBox;
        
        private WpfEdit mUITbAssignmentNameEdit;
        
        private WpfEdit mUIPART_TextBoxEdit;
        
        private WpfButton mUIPART_IncreaseButtonButton;
        
        private WpfButton mUIPART_IncreaseButtonButton1;
        
        private WpfComboBox mUICmbTypeComboBox;
        
        private WpfButton mUISaveButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIUSurviveNotificationWindow : WpfWindow
    {
        
        public UIUSurviveNotificationWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "USurvive Notification";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("USurvive Notification");
            #endregion
        }
        
        #region Properties
        public WpfButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WpfButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("USurvive Notification");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIGPACalculatorWindow : WinWindow
    {
        
        public UIGPACalculatorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "GPACalculator";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("GPACalculator");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("GPACalculator");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIUSurviveWindow1 : WinWindow
    {
        
        public UIUSurviveWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "USurvive";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("USurvive");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("USurvive");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
}
